@startuml
class Event {
	-message:string
	-payload:object
	+__init__(message,payload)
	+getMessage():string
	+getPayload():object
}

class IEventSource {
	-eventListeners:list
	+__init__()
	+addEventListener(listener):void
	+fireEvent(event):void
}

interface IEventListener {
	{abstract} +onEvent(event):void
}

interface IDescriptable {
	{abstract} +getDescr():string
}

abstract class AbstractEdSource {
	-unitName:string
	-nExTotal:integer
	-title:string
	__init__(title, unitName, nExTotal=1):
	+getNexTotal():integer
	+getTitle():string
	{abstract} +solveEx(nExSolve): void
	{abstract} +getSourceName():string
	+getUnitName():string
}

abstract class AbstractProblemBook {
	-author:string
	-exCounter:float
	-fComplete:boolean
	+__init__(title, nExTotal, author, unitName)
	+getAuthor():string
	{abstract} +getSourceName():string
	+solveEx(nExSolved): void
	+getExCounter():floar
	+getDescr():string
	
}

class Book {
	+__init__(title, nExTotal, author, unitName)
	+getSourceName():string
}

class YTVideo {
	+__init__(title, nExTotal, author, unitName)
	+getSourceName():string
}

class FixedTimeTask {
	-nDays:integer
	-daysCounter:integer
	-fComplete:boolean
	+__init__(title, nDays):
	+solveEx(p): void
	+getSourceName(): string
	+getDescr(): string
}

class Subject{
	-edSourceList:List
	-curEdSourceIndex:integer
	-fComplete:boolean
	-name:string
	+__init__(name)
	+addEdSource(book):void
	+onEvent(event):void
	+solveEx(nExSolved):void
	+getNExTotal():integer
	+isFinished():boolean
	+getName():string
	+getDescr():string
	+getCurEdSource():AbstractEdSource
}

enum DateType {
	ED_SOURCE
	SUBJECT
	MILESTONE
}

class KeyDate {
	-date:datetime.date
	-dateType:DateType
	-fEnd:boolean
	-payload:object
	+__init__(date, dateType, fEnd, payload)
	+getDate():datetime.date
	+getDateType():DateType
	+getPayload():object
	+__str__():string
}
	
class Milestone {
	-date:datetime.date
	-descr:string
	+__init__(date, descr)
	+getDate():datetime.date
	+getDescr():
		
}

class TimeIntervalDescrRecord {
	-subjName:string
	-subjPerf:float
	+__init__(subj,subjPerf)
	+getSubjName():string
	+getSubjPerf():float
}

class TimeInterval {
	-ms1:Milestone
	-ms2:Milestone
	-sharedPerfSubjRecords:List
	-fixedPerfSubjRecords:List
	+__init__(ms1, ms2):
	+getStartDate():datetime.date
	+getEndDate():datetime.date
	+addSharedPerfSubjRecord(GID, subjRecord):void
	+addFixedPerfSubjRecord(subjRecord):void
	+getSharedPerfSubjRecord(subjRecord):void
	+getFixedPerfSubjRecord(subjRecord):void
	+getSimpleDescr():dict
}


class ImitPlanner {
	-subjectList:List
	-trainingModes:List
	-milestoneList:List
	+__init__(trainingModes)
	+addSubject(subject):void
	+addMilestone(milestone):void
	-checkMilestoneListLength():integer
	-checkSubjListLength():integer
	-refreshCurDate():void
	-incCurDate():void
	-getCurDate():void
	+getNDays():integer
	+getNExTotal():integer
	-inputValidation():integer
	+genKeyDates():boolean
	+onEvent(event):void
	+genTimeIntDescrRecords():void
}

class SimpleView {
	-showSubjRecords(recordsTuple):void
	+onEvent(event):void
}

class DataBase {
	-db:dict
	-idCounter:integer
	+refresh()
	+__init__()
	+regItem(item):void
	+getID(item):integer
	+addData(item, key, date):integer
	+getData(item,key,date):string
	+makeTuple():tuple
}

class PlantUMLCodeGenerator {
	{static} PUML_COLORS: list
	-subjDB:DataBase
	-edSourceDB:DataBase
	+refresh():void
	-getColor(ID):string
	-inputValidation(self):void
	+genPlantUMLCode(filename, title):void
}



class SubjectAndEdSource {
	-subj:Subject
	-edSource: AbstractEdSource
	+__init__(subj, edSource)
	+getSubject():subject
	+getEdSource():AbstractEdSource
	+getDescr(): String
}

class TrainingModes {
	-trainingModes: dict
	+__init__(trainingModes)
	+getGID(subj, intervalIndex):integer
	+isShared(subj, intervalIndex):boolean
	+getPerf(subj, intervalIndex):integer
	+getModes(): dict
	+getNModesPerSubject(subject):integer
	+hasSubject(subject):boolean
}

enum TrainingModesSharedFlag {
	SharedMode
	FixedMode
}

IEventSource ..> Event : <<send>>

IEventListener ..> Event : <<derive>>

AbstractEdSource ..|> IDescriptable
AbstractEdSource ..|> IEventSource

AbstractProblemBook --|> AbstractEdSource
Book --|> AbstractProblemBook
YTVideo --|> AbstractProblemBook	
FixedTimeTask --|> AbstractEdSource

Subject o-- AbstractEdSource
Subject ..|> IEventListener
Subject ..|> IEventSource
Subject ..|> IDescriptable

ImitPlanner o-- Subject
ImitPlanner o-- Milestone

TimeInterval o-- Milestone

TimeInterval o-- TimeIntervalDescrRecord

ImitPlanner ..> KeyDate : <<create>>
ImitPlanner ..> TimeInterval : <<create>>

KeyDate ..> DateType : <<derive>>

SimpleView ..|> IEventListener

SimpleView ..> TimeInterval : <<use>>

SimpleView ..> KeyDate : <<use>>

PlantUMLCodeGenerator ..|> IEventListener
PlantUMLCodeGenerator *-- DataBase

ImitPlanner o-- TrainingModes
TrainingModes ..> TrainingModesSharedFlag: <<use>>

SubjectAndEdSource o-- Subject
SubjectAndEdSource o-- AbstractEdSource
KeyDate ..> SubjectAndEdSource: <<derive>>

PlantUMLCodeGenerator ..> TimeInterval: <<use>>
PlantUMLCodeGenerator ..> KeyDate: <<use>>






@enduml
